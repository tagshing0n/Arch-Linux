                                                                                                     #############################################################
                                                                                                     ##                        COMMAND                          ##
                                                                                                     #############################################################


###########################################################################
##                          DOWNLOAD AND INSTALL ISO                     ##
###########################################################################
# Download Arch-Linux.iso using https://archlinux.org/download/ link.

# Create New Virtual Machine (in this case I use VMWare Player 16)
# Configuration Virtual Machine
# - Guest operative system Debian 5 64-bits
# - Memory RAM 4 GB
# - Processador 2 nucleos
# - Network Bridge



###########################################################################
##                              INICIATING                               ##
###########################################################################
# Run Virtual Machine. Select first opction (BIOS)

# Here we go. Firts check internet conection with the command                                       ping -c 1 www.google.com

# Set the keyboard with the commmand                                                                loadkeys es



###########################################################################
##                           PARTITION TABLE                             ##
###########################################################################
# We establish partitions with the command                                                          cfdisk
# Partition table. Select DOS.
# Create three partition. Select NEW for each one (515M Primary, 15G 
# Primary, 4.5G Primary).

# Select TYPE for assignment type of partition. For 4.5 Primary select 
# Linux swap / Solaris.

# Then select WRITE and then select QUIT.
# Check the correct write in table with the command                                                 lsblk

# Format partition (vfat) for 512M Primary                                                          mkfs.vfat -F 32 /dev/sda1
# Format partition (ext4) for 15G Primary                                                           mkfs.ext4 /dev/sda2
# Format partition (swap) for 4.5 Primary (Linux swap / Solaris)                                    mkswap /dev/sda3
# Enable swap area                                                                                  swapon



###########################################################################
##                           MOUNT THE SYSTEM                            ##
###########################################################################
# Mount /dev/sda2 on /mnt                                                                           mount /dev/sda2 /mnt
# Make directory into /mnt named boot                                                               mkdir /mnt/boot
# Mount /dev/sda1 on /mnt/boot                                                                      mount /dev/sda1 /mnt/boot



###########################################################################
##                     INSTALL ADITIONAL PACKAGES                        ##
###########################################################################
# Install packages                                                                                  pacstrap /mnt linux linux-firmware networkmanager grub wpa_supplicant base base-devel 
# Create fstab fil                                                                                  genfstab -U /mnt
# Send to /mnt/etc/fstab                                                                            genfstab -U /mnt/etc/fstab
# Check with cat                                                                                    cat /mnt/etc/fstab



###########################################################################
##                        WE ENTER OUR SYSTEM                            ##
###########################################################################

# We enter our system                                                                               arch-chroot /mnt
# Create a password for user root                                                                   passwd
# Create a new user                                                                                 useradd -m atomarch
# Create a password for atomarch                                                                    passwd atomarch

# For the system to ask us for the password went we want to be root:
# - We assign our user to the WHEEL group                                                           usermod -aG wheel atomarch
# - Install sudo packages                                                                           pacman -S sudo
# - Install vim and nano                                                                            pacman -S vim nano
# - Open /etc/sudoers and uncomment %wheel ALL=(ALL:ALL) ALL                                        nano /etc/sudoers
# - It´s all. We probe the changes. We change to atomarch user                                      su atomarch
# - Show identifications number                                                                     id
# - We ask for root                                                                                 sudo su
# - Well done, ask for password!!

                                                                                                     

###########################################################################
##                        CONFIGURE THE REGIONS                          ##
###########################################################################
# Open /etc/locale.gen and uncomment en_US.UTF-8 UTF-8 and es_MX.UTF-8 UTF-8                        nano /etc/locale.gen
# Generate locale (region)                                                                          locale-gen
# Configurete keyboard creating vconsole.conf file and write:                                       

# KEYMAP=la-latin1                                                                                  nano /etc/vconsole.conf



###########################################################################
##                       INSTALL THE BOOTLOADER (GRUB)                   ##
###########################################################################
# We will install the bootloader.
# Install grub                                                                                     grub-install /dev/sda
# Create configurate file for grub                                                                 grub-mkconfig -o /boot/grub/grub.cfg                     
# Check hostname (this is not created)                                                             cat /etc/hostname
# Create file                                                                                      echo coffeBreak > /etc/hostname
# Then do cat                                                                                      cat /etc/hostname
# Modify hosts file writing:

# 127.0.0.1 localhost
# ::1       localhost                                                                                            
# 127.0.0.1 coffreBreak.localhost coffeBreak                                                       nano /etc/hosts



###########################################################################
##                    IS TIME TO "I USE ARCH BY THE WAY"                 ##
###########################################################################
# For fun.
# Install neofetch                                                                                 pacman -S neofetch



###########################################################################
##                          NWTWORK CONECTION                            ##
###########################################################################
# We will conect internet.
# We become root                                                                                  sudo su
# Start service for internet conection                                                            systemctl start NetworkManager.service
# Enable NetworkManager                                                                           systemctl enable NetworkManager
# Do ping to google                                                                              
# Well done! That´s it!                                                                           ping -c 1 google.com
# Start wpa_applicant.service                                                                     systemctl start wpa_supplicant.service
# Enable wpa_supplicant                                                                           systemctl enable wpa_supplicant.service



###########################################################################
##                            AUR REPOSITORY                             ##
###########################################################################
# We vill add aur repository for more packages. 
# Install git                                                                                     pacman -S git
# We become atomarch user                                                                           
# Create directorie /repos and then into it                                                       mkdir -p Desktop/atomarch/repos
                                                                                                  cd Desktop/atomarch/repos
# Download repository                                                                             git clone https://aur.archlinux.org/paru-bin.git
# Go into paru-bin                                                                                cd paru-bin
# Use makepkg                                                                                     makepkg -si
# Well done. ARU repository it´s done.



###########################################################################
##                      BLACKARCH REPOSITORY (OPTIONAL)                  ##
###########################################################################
# We will add blackarch repository for pentesting packages.
# Make blackarch directory into  /home/atomarch/Desktop/atomarch/repos and
# then into it blackarch                                                                          mkdir blackarch
                                                                                                  cd blackarch
# Donwload strap.sh                                                                               curl -O https://blackarch.org/strap.sh   
# User permits for execute                                                                        chmod +x strap.sh
# Become root                                                                                     sudo su
# Execute strap.sh                                                                                ./strap.sh
# Update                                                                                          pacman -Sy
# Well done. The system is update and contain blackarch repository!



###########################################################################
##                          GRAPHIC INTERFACE                            ##
########################################################################### 
# We will install graphic interface.
# Install packages xorg, xorg-server (enter for default install)                                  pacman -S xorg xorg-server
# Install package gnome                                                                           pacman -S gnome 
# Start gdm.service for begin the graphic interface then log in atomarch                          systemctl start gdm.service
# Well done! We have graphic interface! We have eyes!
# Press Ctrl-Alt-F5 and login as atomarch
# Become root                                                                                     sudo su
# Enable demon systemctl gdm.service (when reboot the graphical interface                                 
# run again).                                                                                     systemctl enable gdm.service
# Download Terminal kitty                                                                         pacman -S kitty
# Reboot system 



###########################################################################
##                          INSTALL VMWARE-TOOLS                         ##
###########################################################################
# We will load the system with the correct proportions.
# One once in home screen press Ctrl-Alt-F5 and login as atomarch
# Become root                                                                                     sudo su
# Install package gtkmm                                                                           pacman -S gtkmm
# Install packages open-vm-tools                                                                  pacman -S open-vm-tools
# Install xf86-video-vmware xf86-input-vmmouse                                                    pacman -S xf86-video-vmware xf86-input-vmmouse
# Enable demon systemctl vmtoolsd                                                                 systemctl enable vmtoolsd
# Next step, pray an our father!
# Reboot system                                                                                   reboot now
# Login with the interface 
# Run kitty terminal. The keyboard does not word correct.                            
# Then go to Keyboard into Activities botton. Add Spanish (Latin American) 
# option into Input Sources menu. Finally remove English keyboard. It´s all.



###########################################################################
##                          INSTALL AWESOME WM                           ##
###########################################################################
# We will install Awesome WM with PICOM and other requirements
# Run kitty terminal                                                     
# Become root                                                                                    sudo su
# Install firefox (enter for default)                                                            pacman -S firefox
# Open firefox window
# Go to github.com/rxyhn/dotfiles
# Pick to SETUP botton. Copy and paste                                                           paru -S awesome-git picom-git alacritty rofi todo-bin acpi acpid acpi_call \
#                                                                                                wireless_tools jq inotify-tools polkit-gnome xdotool xclip maim \
#                                                                                                brightnessctl alsa-utils alsa-tools pulseaudio lm_sensors gpick \
#                                                                                                mpd mpc mpdris2 ncmpcpp playerctl redshift ffmpeg bluez-utils --needed 
# Enter for default instalation (in : part write q for continue with the
# instalation)
# Copy an paste:                                                                                 # For automatically launching mpd on login
#                                                                                                systemctl --user enable mpd.service
#                                                                                                systemctl --user start mpd.service
#
#                                                                                                # For charger plug/unplug events (if you have a battery)
#                                                                                                sudo systemctl enable acpid.service
#                                                                                                sudo systemctl start acpid.service

# We will install FONTS. We install wget                                                         sudo pacman -S wget
# Change to directory /usr/share/fonts                                                           cd /usr/share/fonts
# Become root                                                                                    sudo su
# Download with wget Iosevka font                                                                wget http://fontlot.com/downfile/5baeb08d06494fc84dbe36210f6f0ad5.105610
# We list                                                                                        ls -l
# Check type of file                                                                             file 5baeb08d06494fc84dbe36210f6f0ad5.105610
# Install p7zip package                                                                          pacman -S p7zip
# Show 5baeb08d06494fc84dbe36210f6f0ad5.105610 files                                             7z l 5baeb08d06494fc84dbe36210f6f0ad5.105610
# Rename 5baeb08d06494fc84dbe36210f6f0ad5.105610 like comprimido.zip                             mv 5baeb08d06494fc84dbe36210f6f0ad5.105610 comprimido.zip
# We decompress comprimido.zip file                                                              unzip comprimido.zip
# Remove comprimido.zip                                                                          rm comprimido.zip
# Find archives with termination .ttf using grep                                                 find . | grep "\.ttf$"
# While find this files sent to /usr/share/fonts                                                 find . | grep "\.ttf$" | while read line; do cp $line .; done
# Listing                                                                                        ls
# Remove iosevka-2.2.1 and iosevka-slap-2.1.1                                                    rm -r iosevka-2.2.1/
#                                                                                                rm -r iosevka-slap-2.1.1/
# We will download Icomoon font. We go to 
# https://dropbox.com/s/hrkub2yo9iapljz/icomoon.zip?dl=0 link
# and download icomoon.zip.
# Return to kitty and move /home/atomarch/Downloads/icomoon.zip 
# into /usr/share/fonts                                                                          mv /home/atomarch/Downloads/icomoon.zip .    
# Decompress icomoon.zip                                                                         unzip icomoon.zip
# Move .ttf files into /usr/share/fonts                                                          mv icomoon/*.ttf .
# Remove icomoon directory                                                                       rm -rf icomoon
# 




